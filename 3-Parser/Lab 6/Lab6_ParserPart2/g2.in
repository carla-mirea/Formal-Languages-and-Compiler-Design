N = Program DeclList Declaration Type Type1 ArrayDecl CmpdStmt StmtList Stmt SimplStmt StructStmt AssignStmt IoStmt Expression Term Factor Condition Relation Identifier RestOfIdentifier Letter Digit NonZeroDigit Boolean IntConstant StringConstant MathematicalOperator LogicalOperator Sign PositiveNumber RestOfNumber StringContent AcceptedSymbol IfStmt WhileStmt
E = ^ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z \n 0 1 2 3 4 5 6 7 8 9 + - * / == <= < >= > != ( ) [ ] { } % = . , ; : " ' _ && || ? ! True False readFromConsole showInConsole be bool char integer number string const check else stopwhen for space newline
S = Program
P =
Program -> DeclList
DeclList -> Declaration
DeclList -> Declaration DeclList
Declaration -> be Identifier Type
Type -> Type1
Type -> ArrayDecl
Type1 -> bool
Type1 -> char
Type1 -> integer
Type1 -> number
Type1 -> string
Type1 -> const
ArrayDecl -> Type1 [ IntConstant ]
CmpdStmt -> StmtList
StmtList -> Stmt
StmtList -> Stmt StmtList
Stmt -> SimplStmt
Stmt -> StructStmt
SimplStmt -> AssignStmt
SimplStmt -> IoStmt
AssignStmt -> Identifier = Expression
IoStmt -> readFromConsole ( Identifier )
IoStmt -> showInConsole ( Identifier )
Expression -> Expression + Term
Expression -> Expression - Term
Expression -> Term
Term -> Term * Factor
Term -> Term / Factor
Term -> Term % Factor
Term -> Factor
Factor -> ( Expression )
Factor -> IntConstant
Factor -> Identifier
StructStmt -> CmpdStmt
StructStmt -> IfStmt
StructStmt -> WhileStmt
IfStmt -> check ( Condition ) { CmpdStmt } else { CmpdStmt }
WhileStmt -> stopwhen ( Condition ) { CmpdStmt }
Condition -> Expression Relation Expression
Condition -> Condition && Condition
Condition -> Condition || Condition
Relation -> <
Relation -> <=
Relation -> ==
Relation -> !=
Relation -> >=
Relation -> >
Identifier -> Letter RestOfIdentifier
RestOfIdentifier -> Letter RestOfIdentifier
RestOfIdentifier -> Digit RestOfIdentifier
RestOfIdentifier -> epsilon
Letter -> A
Letter -> B
Letter -> C
Letter -> D
Letter -> E
Letter -> F
Letter -> G
Letter -> H
Letter -> I
Letter -> J
Letter -> K
Letter -> L
Letter -> M
Letter -> N
Letter -> O
Letter -> P
Letter -> Q
Letter -> R
Letter -> S
Letter -> T
Letter -> U
Letter -> V
Letter -> W
Letter -> X
Letter -> Y
Letter -> Z
Letter -> a
Letter -> b
Letter -> c
Letter -> d
Letter -> e
Letter -> f
Letter -> g
Letter -> h
Letter -> i
Letter -> j
Letter -> k
Letter -> l
Letter -> m
Letter -> n
Letter -> o
Letter -> p
Letter -> q
Letter -> r
Letter -> s
Letter -> t
Letter -> u
Letter -> v
Letter -> w
Letter -> x
Letter -> y
Letter -> z
Digit -> 0
Digit -> 1
Digit -> 2
Digit -> 3
Digit -> 4
Digit -> 5
Digit -> 6
Digit -> 7
Digit -> 8
Digit -> 9
NonZeroDigit -> 1
NonZeroDigit -> 2
NonZeroDigit -> 3
NonZeroDigit -> 4
NonZeroDigit -> 5
NonZeroDigit -> 6
NonZeroDigit -> 7
NonZeroDigit -> 8
NonZeroDigit -> 9
Boolean -> True
Boolean -> False
IntConstant -> Sign PositiveNumber
IntConstant -> 0
Sign -> +
Sign -> -
Sign -> epsilon
PositiveNumber -> NonZeroDigit RestOfNumber
RestOfNumber -> Digit RestOfNumber
RestOfNumber -> epsilon
StringConstant -> " StringContent "
StringContent -> Letter StringContent
StringContent -> Digit StringContent
StringContent -> AcceptedSymbol StringContent
StringContent -> epsilon
AcceptedSymbol -> _
AcceptedSymbol -> :
AcceptedSymbol -> *
AcceptedSymbol -> +
AcceptedSymbol -> .
AcceptedSymbol -> =
AcceptedSymbol -> !
AcceptedSymbol -> %
AcceptedSymbol -> space
AcceptedSymbol -> newline